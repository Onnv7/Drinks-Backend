spring:
  #environment
  profiles:
    active: dev
#  elasticsearch:
#    rest:
#      uris:
#        - http://localhost:9200
  # database
  data:
    mongodb:
      uri: mongodb://${MONGODB_HOST}:${MONGODB_PORT}/?directConnection=true
#      authentication-database: admin
#      username: hcmute
#      password: hcmute
#      port: ${MONGODB_PORT}
      database: ${MONGODB_DB_NAME}
#      host: ${MONGODB_HOST}
      auto-index-creation: true
#    elasticsearch:
#      repositories.enabled: true
#      cluster-nodes: localhost:9200
#      cluster-name: docker-cluster
  #mail
  mail:
    host: ${EMAIL_HOST}
    port: ${EMAIL_PORT}
    username: ${EMAIL_ID}
    password: ${EMAIL_PASSWORD}
    default-encoding: UTF-8
    properties:
      mail:
        mime:
          charset: UTF
        smtp:
          writetimeout: 10000
          connectiontimeout: 10000
          timeout: 10000
          auth: true
          starttls:
            enabled: true
            required: true
    verify:
      host: ${VERIFY_EMAIL_HOST}
  # kafka
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVER}
      group-id: group-01
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: com.hcmute.drink.dto
  cache:
    type: redis

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

  main:
    allow-bean-definition-overriding: true

elasticsearch:
  index.name: order

# swagger
springdoc:
  swagger-ui:
    disable-swagger-default-url: true
    configUrl: /openapi/swagger-config
    url: /openapi
  api-docs.path: /openapi

# security
security:
  jwt:
    accessTokenKey: ${ACCESS_TOKEN_KEY}
    refreshTokenKey: ${REFRESH_TOKEN_KEY}

#port server
server:
  port: ${SERVER_PORT}



#logging
#%d{HH:mm:ss} [%thread]
logging:
  level:
    tracer: TRACE
    org:
      elasticsearch:
        index:
          search:
            slowlog:
              query: INFO
      springframework:
        security: TRACE
        data:
          mongodb.core:
            MongoTemplate: DEBUG
            ReactiveMongoTemplate: DEBUG
          elasticsearch:
            core: DEBUG
#          client:
#            WIRE: trace
  pattern:
    console: '[%-5level] %d{HH:mm:ss} %logger{36} - %msg%n'

# image cloud
cloudinary:
  cloud_name: ${CLOUDINARY_NAME}
  api_key: ${CLOUDINARY_API_KEY}
  api_secret: ${CLOUDINARY_API_SECRET}

#  module-name: vna
#  api-version: 1.0.0

app:
  username_admin: ${APP_USERNAME_ADMIN}
  password_admin: ${APP_PASSWORD_ADMIN}
  redis_host: ${REDIS_HOST}
  redis_port: ${REDIS_PORT}